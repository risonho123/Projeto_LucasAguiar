@page "/funcionario/novo"
@rendermode InteractiveServer

@using LucasAguiar.Models
@using LucasAguiar.Configs
@inject FuncionarioDAO funcionarioDAO
@inject NavigationManager Navigation

<PageTitle>Funcionário - Novo</PageTitle>

<h1 class="text-xl font-semibold text-gray-800 dark:text-gray-100 mb-6">Novo Funcionário</h1>

@if (erro != null)
{
    <div class="alert alert-danger">@erro</div>
}

<EditForm Model="_novoFuncionario" OnValidSubmit="Salvar">
    <div class="row">
        <div class="col-md-6">
            <InputText class="form-control mb-2" @bind-Value="_novoFuncionario.NomeFuncionario" placeholder="Nome" />
            <InputText class="form-control mb-2" @bind-Value="_novoFuncionario.Telefone" placeholder="Telefone" />
            <InputText class="form-control mb-2" @bind-Value="_novoFuncionario.CPF" placeholder="CPF" />
            <InputDate class="form-control mb-2" @bind-Value="_novoFuncionario.DataNascimento" />
            <InputText class="form-control mb-2" @bind-Value="_novoFuncionario.CTPS" placeholder="CTPS" />
            <InputText class="form-control mb-2" @bind-Value="_novoFuncionario.RG" placeholder="RG" />
            <InputText class="form-control mb-2" @bind-Value="_novoFuncionario.Email" placeholder="Email" />
        </div>
        <div class="col-md-6">
            <InputText class="form-control mb-2" @bind-Value="_novoFuncionario.Estado" placeholder="Estado" />
            <InputText class="form-control mb-2" @bind-Value="_novoFuncionario.Cidade" placeholder="Cidade" />
            <InputText class="form-control mb-2" @bind-Value="_novoFuncionario.Bairro" placeholder="Bairro" />
            <InputText class="form-control mb-2" @bind-Value="_novoFuncionario.Rua" placeholder="Rua" />
            <InputText class="form-control mb-2" @bind-Value="_novoFuncionario.Numero" placeholder="Número" />
        </div>
    </div>

    <button type="submit" class="btn btn-primary mt-3">Salvar</button>
</EditForm>

@code {
    private string? erro = null;
    private Funcionario _novoFuncionario = new();

    private void Salvar()
    {
        try
        {
            if (string.IsNullOrWhiteSpace(_novoFuncionario.NomeFuncionario))
                throw new Exception("O nome é obrigatório.");

            funcionarioDAO.Inserir(_novoFuncionario);
            Navigation.NavigateTo("/funcionario");
        }
        catch (Exception ex)
        {
            erro = ex.Message;
        }
    }
}

<style>/* Tema Laranja para Cadastro de Funcionário */
body {
    background-color: #fffaf3;
    font-family: 'Segoe UI', sans-serif;
    color: #333;
}

h1 {
    font-size: 1.8rem;
    font-weight: bold;
    color: #e67e22;
    margin-bottom: 20px;
    border-bottom: 2px solid #e67e22;
    padding-bottom: 10px;
}

label {
    font-weight: 600;
    color: #d35400;
    margin-bottom: 5px;
    display: block;
}

input,
select,
textarea {
    border: 1px solid #e67e22;
    border-radius: 5px;
    padding: 10px;
    font-size: 1rem;
    width: 100%;
    transition: border-color 0.3s ease;
}

input:focus,
select:focus,
textarea:focus {
    border-color: #d35400;
    outline: none;
    box-shadow: 0 0 5px rgba(230, 126, 34, 0.5);
}

.btn-primary {
    background-color: #e67e22;
    border: none;
    color: white;
    font-weight: bold;
    padding: 10px 20px;
    border-radius: 5px;
    transition: background-color 0.3s ease;
}

.btn-primary:hover {
    background-color: #d35400;
}

.alert-danger {
    background-color: #fceae5;
    color: #c0392b;
    border: 1px solid #e74c3c;
    padding: 10px;
    border-radius: 5px;
    margin-bottom: 15px;
}

.form-control {
    margin-bottom: 15px;
}

.row {
    display: flex;
    flex-wrap: wrap;
    gap: 30px;
}

.col-md-6 {
    flex: 1;
    min-width: 300px;
}</style>